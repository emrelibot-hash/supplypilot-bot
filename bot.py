import os
import json
import requests
from flask import Flask, request, abort
from google.oauth2 import service_account
from googleapiclient.discovery import build

# ------------ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è ------------

# Telegram
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω TELEGRAM_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
API_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}"

# Google Sheets
SPREADSHEET_ID = os.environ.get("SPREADSHEET_ID")
if not SPREADSHEET_ID:
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω SPREADSHEET_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Google ‚Äî –ø–æ–ª–Ω—ã–π JSON –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π GOOGLE_CREDS_JSON
creds_json = os.environ.get("GOOGLE_CREDS_JSON")
if not creds_json:
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω GOOGLE_CREDS_JSON –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
creds_dict = json.loads(creds_json)

# –°–æ–∑–¥–∞—ë–º —É—á—ë—Ç–∫—É –∏ —Å–µ—Ä–≤–∏—Å
creds = service_account.Credentials.from_service_account_info(
    creds_dict,
    scopes=["https://www.googleapis.com/auth/spreadsheets"]
)
sheets_service = build("sheets", "v4", credentials=creds)

# –ü–æ–ª—É—á–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Å—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
meta = sheets_service.spreadsheets().get(spreadsheetId=SPREADSHEET_ID).execute()
FIRST_SHEET_TITLE = meta["sheets"][0]["properties"]["title"]

# ------------ Flask & Helpers ------------

app = Flask(__name__)

def send_message(chat_id: int, text: str):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    requests.post(
        f"{API_URL}/sendMessage",
        json={"chat_id": chat_id, "text": text}
    )

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.get_json(force=True)
    if "message" not in data:
        return "ok", 200

    msg = data["message"]
    chat_id = msg.get("chat", {}).get("id")
    text = msg.get("text", "")
    if not chat_id:
        return "ok", 200

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    lower = text.strip().lower()
    if lower.startswith("/start"):
        send_message(chat_id, "üëã –ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    elif lower.startswith("/test"):
        # –ü–∏—à–µ–º –≤ A1 –Ω–∞ –ø–µ—Ä–≤–æ–º –ª–∏—Å—Ç–µ
        range_name = f"'{FIRST_SHEET_TITLE}'!A1"
        body = {"values": [["‚úÖ Bot connected"]]}
        sheets_service.spreadsheets().values().update(
            spreadsheetId=SPREADSHEET_ID,
            range=range_name,
            valueInputOption="RAW",
            body=body
        ).execute()
        send_message(chat_id, f"‚úÖ Google Sheets –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ –ª–∏—Å—Ç–µ ¬´{FIRST_SHEET_TITLE}¬ª.")
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —ç—Ö–æ
        send_message(chat_id, f"–ü–æ–ª—É—á–µ–Ω–æ: {text}")

    return "ok", 200

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
