import os
import json
import requests
import tempfile

from flask import Flask, request
from google.oauth2 import service_account
from googleapiclient.discovery import build
import pandas as pd

# ‚Äî‚Äî‚Äî‚Äî‚Äî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Äî‚Äî‚Äî‚Äî‚Äî

# Telegram
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
API_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}"

# Google Sheets
SPREADSHEET_ID = os.getenv("SPREADSHEET_ID", "–í–ê–®_SPREADSHEET_ID")
# –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å JSON –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π GOOGLE_CREDS_JSON
creds_info = json.loads(os.getenv("GOOGLE_CREDS_JSON"))
creds = service_account.Credentials.from_service_account_info(
    creds_info,
    scopes=["https://www.googleapis.com/auth/spreadsheets"]
)
sheets = build("sheets", "v4", credentials=creds)

app = Flask(__name__)

def send_message(chat_id: int, text: str):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram."""
    requests.post(
        f"{API_URL}/sendMessage",
        json={"chat_id": chat_id, "text": text}
    )

def download_file(file_id: str) -> str:
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ Telegram, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å."""
    # –ø–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    r = requests.get(f"{API_URL}/getFile?file_id={file_id}")
    file_path = r.json()["result"]["file_path"]
    # —Å–∫–∞—á–∏–≤–∞–µ–º
    url = f"https://api.telegram.org/file/bot{TELEGRAM_TOKEN}/{file_path}"
    resp = requests.get(url, stream=True)
    tmp = tempfile.NamedTemporaryFile(delete=False, suffix=".xlsx")
    with open(tmp.name, "wb") as f:
        for chunk in resp.iter_content(1024):
            f.write(chunk)
    return tmp.name

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.get_json(force=True)
    msg  = data.get("message", {})
    chat_id = msg.get("chat", {}).get("id")
    if not chat_id:
        return "ok", 200

    text = msg.get("text", "")
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã
    if text.startswith("/start"):
        send_message(chat_id, "üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏—Ç–µ BOQ-—Ñ–∞–π–ª, –∏ —è —Å–æ–∑–¥–∞–º –¥–ª—è –≤–∞—Å –ª–∏—Å—Ç –≤ Google Sheets.")
        return "ok", 200

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç
    if "document" in msg:
        file_id = msg["document"]["file_id"]
        send_message(chat_id, "üì• –°–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é‚Ä¶")
        try:
            local_path = download_file(file_id)
            # –ß–∏—Ç–∞–µ–º –≤ DataFrame –±–µ–∑ –ø–µ—Ä–µ–≤–æ–¥–∞
            df = pd.read_excel(local_path, header=None, dtype=str, engine="openpyxl")
        except Exception as e:
            send_message(chat_id, f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            return "ok", 200

        # –£–∑–Ω–∞—ë–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ª–∏—Å—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è
        meta = sheets.spreadsheets().get(spreadsheetId=SPREADSHEET_ID).execute()
        existing = {sh["properties"]["title"] for sh in meta["sheets"]}
        # –ù–æ–≤–æ–µ –∏–º—è ¬´BOQ-<N>¬ª
        idx = 1
        while f"BOQ-{idx}" in existing:
            idx += 1
        new_title = f"BOQ-{idx}"

        # –°–æ–∑–¥–∞—ë–º –ª–∏—Å—Ç
        try:
            sheets.spreadsheets().batchUpdate(
                spreadsheetId=SPREADSHEET_ID,
                body={
                    "requests": [
                        {"addSheet": {"properties": {"title": new_title}}}
                    ]
                }
            ).execute()
        except Exception as e:
            send_message(chat_id, f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ª–∏—Å—Ç: {e}")
            return "ok", 200

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º values –∏ –∑–∞–ª–∏–≤–∞–µ–º
        values = df.fillna("").values.tolist()
        try:
            sheets.spreadsheets().values().update(
                spreadsheetId=SPREADSHEET_ID,
                range=f"'{new_title}'!A1",
                valueInputOption="RAW",
                body={"values": values}
            ).execute()
        except Exception as e:
            send_message(chat_id, f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ: {e}")
            return "ok", 200

        send_message(chat_id, f"‚úÖ –õ–∏—Å—Ç ¬´{new_title}¬ª —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∞–Ω–Ω—ã–º–∏.")
        return "ok", 200

    # –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö ‚Äî —ç—Ö–æ
    send_message(chat_id, f"–ü–æ–ª—É—á–µ–Ω–æ: {text}")
    return "ok", 200

if __name__ == "__main__":
    # –Ω–∞ Render.com PORT –∑–∞–¥–∞—ë—Ç—Å—è –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
