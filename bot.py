import os
import json
import requests
from flask import Flask, request
from google.oauth2 import service_account
from googleapiclient.discovery import build

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
API_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}"

SPREADSHEET_ID = "1GL0_wzT3OaFBPQk6opiDaSdel4uVzpr_lcTbJtBNlxk"
CREDS_PATH = os.getenv("GOOGLE_CREDS_PATH", "vika-bot.json")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets API
creds = service_account.Credentials.from_service_account_file(
    CREDS_PATH,
    scopes=["https://www.googleapis.com/auth/spreadsheets"]
)
service = build("sheets", "v4", credentials=creds)

app = Flask(__name__)

def send_message(chat_id: int, text: str):
    requests.post(
        f"{API_URL}/sendMessage",
        json={"chat_id": chat_id, "text": text}
    )

@app.route("/webhook", methods=["POST"])
def webhook():
    data    = request.get_json(force=True)
    msg     = data.get("message", {})
    chat_id = msg.get("chat", {}).get("id")
    text    = msg.get("text", "")

    if not chat_id:
        return "ok", 200

    # 1) /start
    if text.startswith("/start"):
        send_message(chat_id, "üëã –ü—Ä–∏–≤–µ—Ç, –ù–∏–∑–∞–º–∏! –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

    # 2) /test ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets
    elif text.startswith("/test"):
        # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º A1 –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–∏
        meta = service.spreadsheets().get(spreadsheetId=SPREADSHEET_ID).execute()
        first_title = meta["sheets"][0]["properties"]["title"]
        range_name = f"'{first_title}'!A1"
        body = {"values": [["‚úÖ Bot connected"]]}
        service.spreadsheets().values().update(
            spreadsheetId=SPREADSHEET_ID,
            range=range_name,
            valueInputOption="RAW",
            body=body
        ).execute()
        send_message(chat_id, f"‚úÖ Google Sheets –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ –ª–∏—Å—Ç–µ ¬´{first_title}¬ª.")

    # 3) –°–æ–∑–¥–∞—Ç—å RFQ <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞>
    elif text.lower().startswith("—Å–æ–∑–¥–∞—Ç—å rfq"):
        project_name = text[len("—Å–æ–∑–¥–∞—Ç—å rfq"):].strip()
        # –ø—Ä–æ—á–∏—Ç–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ, –Ω–∞–π—Ç–∏ –≤—Å–µ RFQ-* –ª–∏—Å—Ç—ã
        meta = service.spreadsheets().get(spreadsheetId=SPREADSHEET_ID).execute()
        existing = [
            s["properties"]["title"]
            for s in meta["sheets"]
            if s["properties"]["title"].startswith("RFQ-")
        ]
        next_num = len(existing) + 1
        new_title = f"RFQ-{next_num}"

        # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç
        batch = {"requests":[{"addSheet":{"properties":{"title":new_title}}}]}
        resp = service.spreadsheets().batchUpdate(
            spreadsheetId=SPREADSHEET_ID, body=batch
        ).execute()
        sheet_id = resp["replies"][0]["addSheet"]["properties"]["sheetId"]

        # –ø–∏—à–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = [["–ü–æ—Å—Ç–∞–≤—â–∏–∫","–¶–µ–Ω–∞ USD","–£—Å–ª–æ–≤–∏—è","–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"]]
        service.spreadsheets().values().update(
            spreadsheetId=SPREADSHEET_ID,
            range=f"'{new_title}'!A1",
            valueInputOption="RAW",
            body={"values":headers}
        ).execute()

        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –∏ –æ—Ç–≤–µ—á–∞–µ–º
        link = f"https://docs.google.com/spreadsheets/d/{SPREADSHEET_ID}/edit#gid={sheet_id}"
        send_message(chat_id, f"‚úî –õ–∏—Å—Ç {new_title} –¥–ª—è ¬´{project_name}¬ª —Å–æ–∑–¥–∞–Ω: {link}")

    # 4) –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî —ç—Ö–æ
    else:
        send_message(chat_id, f"–ü–æ–ª—É—á–µ–Ω–æ: {text}")

    return "ok", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
